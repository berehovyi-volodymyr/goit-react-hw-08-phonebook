{"version":3,"file":"static/js/124.a83ecbc1.chunk.js","mappings":"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","sources":["components/ContactForm/initialState.js","webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","redux/contacts/contacts-selectots.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","redux/filter/filter-selectors.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["const initialState = {\n  name: '',\n  phone: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"contactForm_name__DB6rE\",\"number\":\"contactForm_number__JiMyA\",\"form\":\"contactForm_form__3ay0L\",\"button\":\"contactForm_button__JixDz\",\"input\":\"contactForm_input__wCtae\"};","import { useState } from 'react';\nimport initialState from './initialState';\nimport styles from './contactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/contacts-operation';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({ ...initialState });\n  const { name, phone } = state;\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(store => store.contacts.items);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${state.name} is already in contacts`);\n      return;\n    }\n\n    const action = addContact({ name, number: phone });\n    dispatch(action);\n    setState({ ...initialState });\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        <span className={styles.name}>Name</span>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <span className={styles.number}>Number</span>\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__R0BG5\",\"listItems\":\"contactList_listItems__+-d-2\",\"name\":\"contactList_name__40JWK\",\"number\":\"contactList_number__hb7Yk\",\"button\":\"contactList_button__twtQb\"};","export const getAllContacts = store => store.contacts;\n\nexport const selectAllContacts = ({ contacts }) => contacts.items;\n\nexport const filteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n\nexport const isContactLoading = ({ contacts }) => contacts.isLoading;\n","import styles from './contactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  filteredContacts,\n  isContactLoading,\n} from '../../redux/contacts/contacts-selectots';\nimport {\n  getContacts,\n  deleteContact,\n} from '../../redux/contacts/contacts-operation';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(filteredContacts);\n  const isLoading = useSelector(isContactLoading);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={styles.list}>\n      {isLoading ? (\n        <h2>...Loading</h2>\n      ) : (\n        items.map(({ id, name, phone }) => (\n          <li key={id} className={styles.listItems}>\n            <p className={styles.name}>{name}</p>\n            <p className={styles.phone}>{phone}</p>\n            <button\n              className={styles.button}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__nHxuJ\",\"title\":\"filter_title__k4Z+2\",\"input\":\"filter_input__sX944\"};","export const getFilter = ({ filter }) => filter;\n","import styles from './filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <label className={styles.label}>\n      <span className={styles.title}>Find contacts by name</span>\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <h2>Contact</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["name","phone","useState","initialState","state","setState","dispatch","useDispatch","contacts","useSelector","store","items","handleChange","target","value","prevState","className","styles","onSubmit","e","preventDefault","find","contact","alert","action","addContact","number","type","pattern","title","required","onChange","filteredContacts","filter","normalizedFilter","toLowerCase","includes","isContactLoading","isLoading","useEffect","getContacts","map","id","onClick","deleteContact","getFilter","setFilter"],"sourceRoot":""}